Task Description,Date,Duration,Week,Total Week Hours,Notes/Comments
Project Planning Research: Exploring strategies for effective project management.,8/25/2023,2:47:24,08/21/2023 – 08/27/2023,3:58:22,
Project Ideation & Time Planning: Researching project concepts and creating a structured timeline.,8/25/2023,0:39:11,08/21/2023 – 08/27/2023,3:58:22,
"Project Management Setup: Establishing a project board, integrating a time tracking app, and creating a timesheet system.",8/27/2023,0:31:47,08/21/2023 – 08/27/2023,3:58:22,
Tech Stack Exploration: Researching the ideal technology stack for a potential project.,8/28/2023,5:09:53,08/28/2023 – 09/03/2023,30:17:07,
UI Design Skill Building: Exploring UI design principles and mastering tools like Figma and Sketch.,8/29/2023,0:29:53,08/28/2023 – 09/03/2023,30:17:07,
Rewatching the Video of the Orientation before I take the quiz.,8/30/2023,0:09:26,08/28/2023 – 09/03/2023,30:17:07,
Pre-Quiz Review: Revisiting the Orientation Video for quiz preparation.,8/30/2023,0:08:02,08/28/2023 – 09/03/2023,30:17:07,
Project Planning on Trello: Creating a comprehensive project plan and to-do list on the project management board.,8/30/2023,0:59:26,08/28/2023 – 09/03/2023,30:17:07,
"Project Selection & Technology Research: Finalizing the project idea, exploring relevant technologies and tools, and completing intake and proposal surveys.",8/31/2023 - 9/01/2023,12:44:20,08/28/2023 – 09/03/2023,30:17:07,
Repository Setup: Establishing both a local and remote repository for version control.,9/1/2023,0:04:09,08/28/2023 – 09/03/2023,30:17:07,
Repository Connection: Linking the local repository to the remote repository.,9/1/2023,0:03:15,08/28/2023 – 09/03/2023,30:17:07,
Feature Objective Documentation: Recording key details and objectives for project features on Trello.,9/1/2023,0:09:30,08/28/2023 – 09/03/2023,30:17:07,
Figma Proficiency & Wireframing: Building expertise in Figma for wireframing the visual design of my web app.,9/1/2023,2:01:11,08/28/2023 – 09/03/2023,30:17:07,
"Design Workflow Utilization: Leveraging OneNote for wireframing, Figma for UI layout, and Draw.io for creating sitemap diagrams.",9/2/2023,8:18:02,08/28/2023 – 09/03/2023,30:17:07,
Node.js & NPM Refresher: Updating and reinforcing my knowledge of Node.js and NPM.,9/4/2023,3:56:41,09/04/2023 – 09/10/2023,34:51:43,
Strategic Application Design Planning: Crafting an efficient planning process for my application's design.,9/5/2023,4:40:26,09/04/2023 – 09/10/2023,34:51:43,
"Strategic Planning Advancement: Methodically shaping the application's roadmap, including user stories and feature enhancements.",9/6/2023,3:10:03,09/04/2023 – 09/10/2023,34:51:43,
Project Planning: Investigating novel strategies to enhance planning and execution efficiency.,9/6/2023,0:45:11,09/04/2023 – 09/10/2023,34:51:43,
Ongoing Efficiency Exploration: Continuously seeking ways to optimize project planning and execution.,9/6/2023,1:26:32,09/04/2023 – 09/10/2023,34:51:43,
Workflow Visualization Enhancement: Incorporating flowcharts to streamline and visually represent project workflows in my planning process.,9/6/2023,1:29:34,09/04/2023 – 09/10/2023,34:51:43,
JavaScript Fundamentals Mastery: Revisiting and strengthening my grasp of essential JavaScript concepts.,9/7/2023,1:33:40,09/04/2023 – 09/10/2023,34:51:43,
"Refreshing my memory on Async/Await and Promises, Object Oriented Programming, DOM and Events.",9/8/2023,3:04:30,09/04/2023 – 09/10/2023,34:51:43,
Database Design Learning Journey: Acquiring skills for database planning and design.,9/9/2023,6:45:12,09/04/2023 – 09/10/2023,34:51:43,
App Core Operations Definition: Clarifying the fundamental functionalities of my application.,9/10/2023,4:46:24,09/04/2023 – 09/10/2023,34:51:43,
Technology Assessment: Assessing and selecting the most suitable technologies for app development.,9/10/2023,3:13:30,09/04/2023 – 09/10/2023,34:51:43,
Design Documents Done: Ready to move forward.,9/11/2023,9:24:43,09/11/2023 – 09/17/2023,39:40:29,
UI Mastery Journey: Diving into React for web development.,9/12/2023,6:54:30,09/11/2023 – 09/17/2023,39:40:29,
React Practice Session: Strengthening skills and knowledge.,9/13/2023,3:34:34,09/11/2023 – 09/17/2023,39:40:29,
Folder Structure Analysis: Navigating the organization of web projects.,9/13/2023,0:29:11,09/11/2023 – 09/17/2023,39:40:29,
Web App Folder Setup: Crafting the organizational backbone.,9/13/2023,2:42:05,09/11/2023 – 09/17/2023,39:40:29,
NPM Package Hunt: Seeking tools to streamline development.,9/13/2023,3:01:53,09/11/2023 – 09/17/2023,39:40:29,
NPM Package Deep Dive: Delving into the functionalities.,9/15/2023,4:26:13,09/11/2023 – 09/17/2023,39:40:29,
UI Development Kickoff: Applying React skills to the project.,9/16/2023,2:07:41,09/11/2023 – 09/17/2023,39:40:29,
Modeling Data with Mongoose: Organizing the backend.,9/17/2023,0:44:23,09/11/2023 – 09/17/2023,39:40:29,
Security Learning Journey: Exploring Authentication and Authorization.,9/17/2023,6:15:16,09/11/2023 – 09/17/2023,39:40:29,
"Database Schema Expansion: Introduced two new schemas, 'photos' and 'languages,' to enhance database functionality.",9/18/2023,1:54:39,09/18/2023 – 09/24/2023,36:49:34,
Database Update: Integrated 'languages' into the database for expanded functionality.,9/19/2023,0:43:25,09/18/2023 – 09/24/2023,36:49:34,
"Form Development Milestone: Successfully constructed login, registration, and profile creation forms.",9/19/2023,3:20:28,09/18/2023 – 09/24/2023,36:49:34,
Component Integration Research: Exploring npm documentation for seamless integration of desired components into my application.,9/19/2023,1:18:53,09/18/2023 – 09/24/2023,36:49:34,
Express App Route Documentation: Defining and documenting the application's routes for clarity and reference.,9/19/2023,0:11:45,09/18/2023 – 09/24/2023,36:49:34,
User Registration and Authentication Design Document: Crafting a comprehensive blueprint for routes and controllers.,9/20/2023,2:21:52,09/18/2023 – 09/24/2023,36:49:34,
Express Error Handling Research: Deepening my understanding of error handling strategies within the Express framework.,9/20/2023,3:24:42,09/18/2023 – 09/24/2023,36:49:34,
Error Handling Implementation: Strengthened my Express app with robust error handling.,9/21/2023,2:14:54,09/18/2023 – 09/24/2023,36:49:34,
Password and JWT Authentication Mastery: Exploring techniques and methods for secure password management and authentication using JWT.,9/21/2023,3:49:26,09/18/2023 – 09/24/2023,36:49:34,
Security and Authentication Implementation: Incorporating login and registration functionalities with protection and JWT-based authentication logic while utilizing Postman for thorough testing.,9/21/2023,4:33:53,09/18/2023 – 09/24/2023,36:49:34,
Protected Login and Registration Features: Successfully integrated login and registration functionalities with robust security measures.,9/22/2023,3:19:08,09/18/2023 – 09/24/2023,36:49:34,
Forgot Password Research: Exploring methods to implement the 'forgot password' feature and integrate email functionality using Nodemailer.,9/22/2023,1:31:24,09/18/2023 – 09/24/2023,36:49:34,
"Enhanced User Model: Incorporated key functions, including 'createPasswordResetToken' and 'changedPasswordAfter,' along with middleware to update 'passwordChangedAt' timestamp for password changes.",9/22/2023,2:51:50,09/18/2023 – 09/24/2023,36:49:34,
Model Refactoring for Efficiency: Streamlined and reorganized models to align with the application's functionalities.,9/23/2023,2:11:27,09/18/2023 – 09/24/2023,36:49:34,
User Routes Planning: Brainstorming and strategizing to determine the most crucial user routes to implement.,9/24/2023,0:45:03,09/18/2023 – 09/24/2023,36:49:34,
Authorization Research: Exploring in-depth to enhance understanding of the principles and practices of authorization.,9/24/2023,1:00:10,09/18/2023 – 09/24/2023,36:49:34,
"Role-Based Access Control Documentation: Roles and permissions documentation, accompanied by middleware implementation to enforce access restrictions based on user roles.",9/24/2023,0:55:42,09/18/2023 – 09/24/2023,36:49:34,
"Password Reset Functionality Added: Successfully implemented basic password reset functionality, utilizing Mailtrap for email testing. Enhanced the 'forgotPassword' controller with Nodemailer for email sending, set up a testing 'sendEmail' function, and integrated it into the 'forgotPassword' controller.",9/25/2023,1:53:16,09/25/2023 – 10/01/2023,20:27:40,
Reset Password Functionality Implemented: Created the 'resetPassword' controller function and tested it using Postman and Mailtrap for a secure and efficient reset process.,9/25/2023,0:40:34,09/25/2023 – 10/01/2023,20:27:40,
"Password Update Functionality Added: Implemented the 'updatePassword' controller function, for exclusive access by logged-in users and tested it using Postman to ensure robust security and functionality.",9/25/2023,0:40:25,09/25/2023 – 10/01/2023,20:27:40,
Security-Related Error Debugging: Focused troubleshooting and resolution of password and security-related issues.,9/25/2023,0:35:01,09/25/2023 – 10/01/2023,20:27:40,
"User Routes Refactor: Optimized endpoint naming, introduced user data management functions, filtered inactive users with middleware, enhanced filterObj for nested fields, and adapted updateUser for admin changes.",9/25/2023,1:30:31,09/25/2023 – 10/01/2023,20:27:40,
Security Enhancement: Studying effective security practices and implementing the express-rate-limit module for added protection and prevention of request overloading.,9/25/2023,0:21:11,09/25/2023 – 10/01/2023,20:27:40,
"Security Header Setup: Set Security HTTP Headers with helmet to help defend against various types of attacks, leaks, and vulnerabilities.",9/25/2023,0:05:33,09/25/2023 – 10/01/2023,20:27:40,
Enhanced Security Middleware: Installed express-mongo-sanitize and xss-clean to safeguard against MongoDB query injection and XSS attacks through middleware.,9/26/2023,0:11:45,09/25/2023 – 10/01/2023,20:27:40,
"Middleware Integration and Code Cleanup: Integrated request logging with Morgan middleware, eliminated duplicate responses in the register controller, removed redundant validation error functions in the errorController, and implemented logout functionality.",9/26/2023,0:09:03,09/25/2023 – 10/01/2023,20:27:40,
"Authentication Debugging: Addressed issues during Postman testing involving cookies and Bearer tokens, requiring debugging to resolve unexpected behaviors.",9/26/2023,2:02:29,09/25/2023 – 10/01/2023,20:27:40,
Profile Completion Enhancement: Implementing a mandatory profile completion step post-registration to ensure users provide essential details before accessing core platform functionalities.,9/26/2023,2:05:23,09/25/2023 – 10/01/2023,20:27:40,
Redux Learning Journey: Embarking on the path to gain expertise in Redux.,9/27/2023,3:12:22,09/25/2023 – 10/01/2023,20:27:40,
"Redux Setup and Integration: Established Redux for state management, integrated react-toastify for alert displays, and implemented alert and auth slices for login, registration, and user authentication.",9/27/2023,1:39:23,09/25/2023 – 10/01/2023,20:27:40,
"Route Protection and Authentication Enhancement: Introduced PrivateRoute component to protect authenticated routes, improved login and registration with enhanced authentication logic, and refactored authController.js for more efficient cookie handling and DRY (Don't Repeat Yourself) code.",9/27/2023,0:32:23,09/25/2023 – 10/01/2023,20:27:40,
Incorporated Registration Flow Design: Integrated the design of the registration flow into the 'User Registration and Authentication Routes & Controllers' documentation.,9/27/2023,0:16:21,09/25/2023 – 10/01/2023,20:27:40,
"New Components & Folder Restructuring: Added ProfileImageUpload and LocationsAutocomplete components, integrate Google Places API, and restructure component folders.",9/28/2023,2:34:12,09/25/2023 – 10/01/2023,20:27:40,
"Component Communication Enhancement: Revised the ProfileCreationForm and ProfileImageUpload components to establish a communication channel. Now, when an image is selected in the ProfileImageUpload component, it's transmitted back to the ProfileCreationForm component, updating its state and preparing the image for submission.",9/29/2023,0:49:20,09/25/2023 – 10/01/2023,20:27:40,
"LocationsAutocomplete Callback Update: Modified the onPlaceSelected callback to receive an object with latitude, longitude, and formatted address when invoked upon location selection.",9/29/2023,0:52:10,09/25/2023 – 10/01/2023,20:27:40,
Dropdown Language Filtering: Implemented filtering in language dropdowns to exclude selected language from options in other language dropdown menus.,9/30/2023,0:16:18,09/25/2023 – 10/01/2023,20:27:40,
Cloudinary Integration for Image Upload: Incorporated the cloudinary and multer-storage-cloudinary packages and configured Cloudinary with multer to facilitate seamless image uploads.,10/1/2023,0:23:33,10/02/2023 – 10/08/2023,18:58:00,
"Controller Function Update: Enhanced the createProfile controller function to handle multipart form data, extract specific fields, and perform user updates in the database.",10/1/2023,2:00:09,10/02/2023 – 10/08/2023,18:58:00,
"Controller Function Update: In the createProfile controller function, I've implemented special handling for languages. This involves retrieving related language documents from the database and substituting language names with their corresponding database IDs during processing.",10/2/2023,1:23:02,10/02/2023 – 10/08/2023,18:58:00,
"Client Authentication with Redux: Successfully finalized the authentication slice on the client-side using Redux. Additionally, I've updated the routing in App.jsx by integrating my routing component for a more comprehensive application structure.",10/2/2023,0:39:08,10/02/2023 – 10/08/2023,18:58:00,
Redux Toolkit Advancements: Expanded my knowledge and expertise in Redux Toolkit for enhanced state management and application development.,10/2/2023,0:30:13,10/02/2023 – 10/08/2023,18:58:00,
"Updated 'photos' Field: Enhanced the 'photos' field in the user model to include functionality similar to the 'profilePicture' field, storing both URL and filename.",10/2/2023,0:03:36,10/02/2023 – 10/08/2023,18:58:00,
Added Age Calculation: Implemented a function in the user schema to calculate the user's age.,10/2/2023,0:04:06,10/02/2023 – 10/08/2023,18:58:00,
Controller Function Update: Modified the createProfile controller function to accommodate scenarios where the user doesn't provide a profile picture.,10/2/2023,0:03:52,10/02/2023 – 10/08/2023,18:58:00,
AuthSlice and LoginForm Logic Refinement: Implemented fixes and improvements to enhance the functionality and reliability of the authSlice in Redux and the LoginForm component.,10/5/2023,0:55:39,10/02/2023 – 10/08/2023,18:58:00,
Navbar Authentication Update: Implemented functionality to dynamically update the Navbar based on the authentication state of the user.,10/5/2023,1:10:28,10/02/2023 – 10/08/2023,18:58:00,
User-Friendly Alerts: Designed custom alert messages for enhanced user experience.,10/6/2023,0:06:20,10/02/2023 – 10/08/2023,18:58:00,
"User Avatar Dropdown: Developed a dropdown menu for the user avatar in the navbar, featuring 'My Profile,' 'Settings,' and 'Log Out' links.",10/6/2023,0:40:15,10/02/2023 – 10/08/2023,18:58:00,
"Personal Profile Page: Designed and developed a PersonalProfile page, functioning as a profile preview exclusively for logged-in users.",10/7/2023,2:20:50,10/02/2023 – 10/08/2023,18:58:00,
Profile Editing Enhancement: Enhanced the LocationsAutocomplete component to display previously saved locations during profile editing.,10/8/2023,0:10:15,10/02/2023 – 10/08/2023,18:58:00,
Profile Editing Enhancement: Improved the ProfileImageUpload component to show the user's profile picture when editing the profile.,10/8/2023,0:13:28,10/02/2023 – 10/08/2023,18:58:00,
Profile Editing Enhancement: Updated the updateMe controller function on the server to correctly process and update data received from the client.,10/8/2023,2:12:24,10/02/2023 – 10/08/2023,18:58:00,
Profile Editing Enhancement: Expanded the authSlice.js by introducing a reducer to update the user's avatar in the navbar when the user changes their profile image.,10/8/2023,0:04:14,10/02/2023 – 10/08/2023,18:58:00,
"Profile Editing Suite: Integrated the ProfileEditForm component, allowing users to edit their profiles and change their email and username (password changes not supported), into the EditProfile page, which provides an efficient platform for users to view and edit their associated data.",10/8/2023,5:53:22,10/02/2023 – 10/08/2023,18:58:00,
"Redux State Enhancement: Streamlined the Redux state management by removing the reducer for updating the user avatar in the navbar and replaced it with a single, comprehensive Redux Action to update all user data.",10/8/2023,0:03:06,10/02/2023 – 10/08/2023,18:58:00,
"Image Handling Controller Functions: Developed controller functions to manage the uploading and deletion of user images, including the corresponding routes to enable these operations.",10/9/2023,2:45:29,10/9/2023 – 10/15/2023,17:18:26,
Photo Upload Component: Integrated the Ant Design 'PicturesWall' component to facilitate photo uploads in the application.,10/9/2023,1:34:14,10/9/2023 – 10/15/2023,17:18:26,
"Photo Display and Deletion Logic: Implemented logic to showcase the user's photos in the PicturesWall component, enabling easy deletion from both the database and Cloudinary.",10/9/2023,4:45:01,10/9/2023 – 10/15/2023,17:18:26,
Carousel Modal Integration: Successfully incorporated Ant Design's Modal and Carousel components to create a modal carousel mode for improved user experience.,10/9/2023,0:20:22,10/9/2023 – 10/15/2023,17:18:26,
"Photo Upload Issue Resolution: Encountered a challenge with photo uploading to the database and Cloudinary in the upload component and backend code. Successfully resolved the issue, ensuring synchronized photo uploads to both the database and Cloudinary for seamless functionality.",10/9/2023,4:33:24,10/9/2023 – 10/15/2023,17:18:26,
Cloudinary Configuration Enhancement: Introduced image resizing functionality in the Cloudinary configuration for improved image handling.,10/9/2023,0:02:02,10/9/2023 – 10/15/2023,17:18:26,
Route and Controller Enhancements: Implemented a new route for accessing a single user by their ID and improved the getAllUsers() controller function by filtering out the current user before sending the response.,10/14/2023,0:22:30,10/9/2023 – 10/15/2023,17:18:26,
User Profile Enhancements: Introduced a virtual property in the user schema to maintain age as a single source of truth.,10/14/2023,0:08:13,10/9/2023 – 10/15/2023,17:18:26,
"User Profile Enhancements: Designed a User Card component for displaying essential user details, clickable to redirect to the user's full profile.",10/14/2023,1:35:03,10/9/2023 – 10/15/2023,17:18:26,
User Profile Enhancements: Created the Public Profile page for user profiles to be publicly viewable.,10/14/2023,1:12:08,10/9/2023 – 10/15/2023,17:18:26,
"Chat Page Design: Created the design for the chat page, ensuring a user-friendly and visually appealing interface for seamless communication.",10/16/2023,4:34:23,10/16/2023 – 10/22/2023,19:54:21,
"Profile Page Enhancement: Implemented an animated chat initiation button on the Profile Page of every user, enhancing the user experience for starting conversations.",10/17/2023,0:05:32,10/16/2023 – 10/22/2023,19:54:21,
WebSocket and Socket.IO Learning Journey: Embarked on a journey to gain knowledge and expertise in WebSocket technology and Socket.IO for real-time communication.,10/17/2023,2:42:05,10/16/2023 – 10/22/2023,19:54:21,
Model Refinement and Message Integration: Enhanced the chat model for improved functionality and introduced a new message model to handle chat messages effectively.,10/18/2023,0:12:12,10/16/2023 – 10/22/2023,19:54:21,
"Chat Routes and Controller Setup: Established chat routes and developed a chat controller with functions for creating, retrieving, listing, and deleting chats.",10/18/2023,1:20:32,10/16/2023 – 10/22/2023,19:54:21,
"Message Routes and Controller Implementation: Configured message routes and introduced a message controller with functions for creating, retrieving, and deleting messages.",10/18/2023,0:32:44,10/16/2023 – 10/22/2023,19:54:21,
"Socket.io Integration: Established Socket.io integration within the server.js file, attaching the Socket.io server to the Express server instance, enabling the application to manage real-time WebSocket connections alongside regular HTTP requests.",10/18/2023,0:16:56,10/16/2023 – 10/22/2023,19:54:21,
"Redux Chat Slice and Debugging Efforts: Established a Redux chat slice to monitor chat-related data and effectively dispatched chat actions within both the chat and public profile components to facilitate dynamic data rendering & faced challenges while streamlining the Redux states with the component logic, resulting in extra debugging efforts to resolve issues and ensure seamless integration.",10/19/2023,6:36:22,10/16/2023 – 10/22/2023,19:54:21,
"Chat Model Enhancement and Controller Modification: Added a 'lastMessageTimestamp' field to the Chat model, facilitating sorting based on chat creation and new message addition. Modified the listChatsForUser() controller function to sort chats in descending order using the 'lastMessageTimestamp' field.",10/21/2023,0:02:14,10/16/2023 – 10/22/2023,19:54:21,
"Socket Connection Refactoring: Reorganized the socket connection by moving it from the chat component to a dedicated context file (SocketContext.jsx), providing broad access to the socket connection across the component tree.",10/21/2023,0:13:37,10/16/2023 – 10/22/2023,19:54:21,
"App.jsx Socket Integration: Encapsulated protected React components within the SocketContext mechanism, enabling the utilization of the socket connection across these components.",10/21/2023,0:01:09,10/16/2023 – 10/22/2023,19:54:21,
"Model Enhancement and Route Creation: Removed the 'active' field from the user model and introduced 'accountActive' and 'currentlyActive' fields. Additionally, a new route in userRoutes.js and the corresponding controller function in userController.js were established to retrieve all active users with whom a user has chatted.",10/21/2023,1:01:21,10/16/2023 – 10/22/2023,19:54:21,
"Controller Function Modification: Adapted the login and logout controller functions in authController.js to manage the user's 'currentlyActive' status, setting it as active during login and inactive during logout.",10/21/2023,0:06:29,10/16/2023 – 10/22/2023,19:54:21,
"Socket.io Server Enhancement in server.js: Expanded the Socket.io setup to maintain a list of active users, implemented logic to handle manual disconnects from the client side (e.g., when a user closes the browser or tab without logging out), managed user details provided after connecting, set the user's 'currentlyActive' status to true upon connection and false upon disconnection for improved user tracking.",10/21/2023,0:48:19,10/16/2023 – 10/22/2023,19:54:21,
Chat.jsx Enhancement: Upgraded the Chat.jsx component to fetch currently active users and dynamically render them within the chat interface.,10/21/2023,0:07:49,10/16/2023 – 10/22/2023,19:54:21,
"Backend Socket Logic Refactoring: Reorganized the socket-related logic within the backend, isolating it into a separate module (socketSetup.js) to enhance structural clarity and maintainability.",10/22/2023,0:11:22,10/16/2023 – 10/22/2023,19:54:21,
"Socket Middleware Development (backend): Crafted a socket middleware module (socketMiddleware.js) within the backend to emit socket events corresponding to specific actions, enhancing real-time communication and interaction.",10/22/2023,0:45:27,10/16/2023 – 10/22/2023,19:54:21,
"Controller Function Adjustment (chatController.js) with Middleware Integration: Modified the 'createChat' controller function within chatController.js to retrieve complete user objects, store the populated chat, and the action type in res.locals. This setup facilitates the subsequent middleware (socketMiddleware.js) in emitting the event of chat creation effectively.",10/22/2023,0:15:12,10/16/2023 – 10/22/2023,19:54:21,
"SocketMiddleware Integration in Chat Creation: Enhanced the route responsible for creating new chats to utilize the newly implemented socketMiddleware, ensuring the emission of chat creation events.",10/22/2023,0:00:36,10/16/2023 – 10/22/2023,19:54:21,
"Socket.io Setup Debugging: Debugged and streamlined the code logic across socketSetup.js, socketMiddleware.js, and server.js to address various issues, particularly the initialization problem with Socket.io in server.js, ensuring the smooth operation of Socket.io within the application.",10/23/2023,3:23:35,10/23/2023 – 10/29/2023,17:09:53,
"ChatSlice Enhancement: Updated the chatSlice in Redux to ensure that new chats are added to the start of the array, providing recipients with the most recent chat at the top of their chat list in real-time.",10/23/2023,0:00:26,10/23/2023 – 10/29/2023,17:09:53,
"Frontend Socket Listeners: Introduced listeners within SocketContext.jsx on the frontend to detect changes in the active users list and to respond to new chat initiations by other users, enhancing real-time communication and interaction.",10/23/2023,0:14:12,10/23/2023 – 10/29/2023,17:09:53,
"Active Users Redux Slice: Developed an activeUsersSlice within Redux to effectively monitor and maintain a real-time record of active users, enhancing dynamic data updates.",10/23/2023,0:09:17,10/23/2023 – 10/29/2023,17:09:53,
"SocketContext Integration in Chat Component: Integrated SocketContext within the Chat component to establish event listeners, ensuring real-time active user display and new chats.",10/23/2023,0:12:35,10/23/2023 – 10/29/2023,17:09:53,
Code Optimization in server.js: Conducted code optimization in server.js by removing redundant and unnecessary code segments for improved efficiency and clarity.,10/25/2023,0:01:25,10/23/2023 – 10/29/2023,17:09:53,
"Error Handling and Reconnection Logic: Thoroughly implemented error handling in both server and client sides (socketSetup.js & SocketContext.jsx) to address potential socket connection issues. Additionally, on the client side, incorporated intelligent reconnection logic to automatically re-establish connections after unexpected disconnections and refresh the list of active users for uninterrupted user interactions.",10/25/2023,0:34:27,10/23/2023 – 10/29/2023,17:09:53,
"Reconnection Logic Refinement: Conducted testing and debugging to fine-tune the reconnection logic, ensuring robust and reliable behavior in the face of network interruptions.",10/25/2023,0:26:31,10/23/2023 – 10/29/2023,17:09:53,
"Socket Middleware Code Refactoring: Streamlined the code within socketMiddleware.js by organizing it for improved readability and maintainability. Additionally, introduced a new emit event function to manage the handling of new messages, enhancing code structure and clarity.",10/25/2023,0:26:43,10/23/2023 – 10/29/2023,17:09:53,
Controller Function Enhancement and Middleware Integration: Improved the createMessage and getChatMessages controller functions within messageController.js for enhanced functionality. Integrated the socketMiddleware in messageRoutes.js to optimize real-time message handling.,10/25/2023,0:24:13,10/23/2023 – 10/29/2023,17:09:53,
"Client-Side Socket Event Listener: Introduced a new event listener for detecting and handling incoming new messages within SocketContext.jsx, enhancing real-time message interaction on the client side.",10/25/2023,0:02:21,10/23/2023 – 10/29/2023,17:09:53,
"Message Slice Creation: Developed a message slice within Redux to effectively manage and display messages in real-time, improving the overall user experience.",10/25/2023,0:28:13,10/23/2023 – 10/29/2023,17:09:53,
"Chat Component Enhancement: Enhanced the chat component to fetch the message history of the current chat, facilitate message sending, and efficiently render messages in the user interface, improving the chat functionality.",10/25/2023,1:12:32,10/23/2023 – 10/29/2023,17:09:53,
"Debugging and Logic Streamlining: Detected and corrected an error in the event function for handling new messages, requiring a debugging effort. Successfully streamlined the logic across both the server and client sides for improved functionality.",10/25/2023,0:51:22,10/23/2023 – 10/29/2023,17:09:53,
"Timestamp Formatting and Styling: Created a function to format timestamps into a readable format and integrated it into the JSX to display the date and time of each message. Additionally, added CSS styling for the timestamps to enhance their visual presentation.",10/27/2023,0:18:37,10/23/2023 – 10/29/2023,17:09:53,
"Chat Sorting Logic Enhancement: Incorporated the missing logic to update the 'lastMessageTimestamp' of the chat, ensuring that the chats in the chat list are accurately sorted based on new messages.",10/27/2023,0:04:12,10/23/2023 – 10/29/2023,17:09:53,
"Chat List Sorting Action and Dispatch: Implemented an action to move a chat to the top of the list within the chat slice, enabling real-time chat list sorting. Dispatched this action in both the 'new-message' event listener in SocketContext.jsx (for receiving messages) and the handleSendMessage function in Chat.jsx (for sending messages) to ensure consistent chat list updates.",10/27/2023,0:18:22,10/23/2023 – 10/29/2023,17:09:53,
React-Spring Integration: Delved into documentation and tutorials on React-Spring to gain a comprehensive understanding of the library.,10/27/2023,0:38:12,10/23/2023 – 10/29/2023,17:09:53,
UI Animation Enhancement: Leveraged React-Spring to introduce animations within the chat user interface elevating the overall user experience.,10/27/2023,0:11:13,10/23/2023 – 10/29/2023,17:09:53,
Online Status Indicators: Implemented active indicators alongside users' avatars in the chat list.,10/27/2023,0:09:23,10/23/2023 – 10/29/2023,17:09:53,
"Controller Function Enhancement:  Improved the 'listChatsForUser' controller function in chatController.js by adding logic to loop through each chat and fetch the most recent message, ensuring that chat lists display the latest information for enhanced user engagement.",10/27/2023,0:08:37,10/23/2023 – 10/29/2023,17:09:53,
"Real-Time Chat Previews:  Introduced an action within chatSlice to update the most recent message for a chat and dispatched it for both sending and receiving messages. This implementation enables the display of real-time previews of recent messages, enhancing user interactions.",10/27/2023,0:07:28,10/23/2023 – 10/29/2023,17:09:53,
"Recent Message Preview:  Elevated the user experience by updating the JSX in Chat.jsx to showcase previews of the most recent message in each chat item within the chat list. Additionally, introduced CSS styles to enhance the visual presentation of these previews.",10/27/2023,0:07:53,10/23/2023 – 10/29/2023,17:09:53,
"Message Model Expansion: Expanded the message model by introducing new fields: 'imageUrl' for image attachments, 'delivered' to track message delivery, and 'read' to monitor message read status.",10/28/2023,0:00:47,10/23/2023 – 10/29/2023,17:09:53,
Socket Functions Enhancement: Introduced two new functions within socketSetup.js to facilitate marking a single message as 'read' and to enable marking multiple messages as 'read'.,10/28/2023,0:47:17,10/23/2023 – 10/29/2023,17:09:53,
"Controller Function Refactoring and Expansion: In messageController.js, I refined the 'createMessage' controller, renaming it to 'createTextMessage' to enhance clarity. Additionally, I introduced two new controller functions: 'createImageMessage' to manage messages with image uploads and 'getUnreadMessages' for retrieving all unread messages within a specific chat. To support these additions, I configured corresponding message routes.",10/28/2023,1:38:28,10/23/2023 – 10/29/2023,17:09:53,
Chat Creation Function Enhancement: Enhanced the 'createChat' function in chatController.js to include logic for counting unread messages and identifying the other user within a chat. This improvement streamlines chat management and ensures accurate unread message tracking.,10/28/2023,0:45:52,10/23/2023 – 10/29/2023,17:09:53,
"Real-Time Message Read Marking: Introduced a new action in the Redux message slice to enable the instant marking of messages as 'read' upon their reading by the other user in a chat, enhancing real-time message tracking and user experience.",10/29/2023,0:22:16,10/23/2023 – 10/29/2023,17:09:53,
"Redux Chat Slice Enhancement: Strengthened the Redux chat slice to maintain a record of unread messages, allowing for a visual representation of unread message counts in the user interface. This improvement involved the introduction of a new action to increment the unread message count for a specific chat and updates to the 'setCurrentChat' action to reset the unread message count when a user selects a chat with unread messages, ensuring accurate tracking and user interaction.",10/29/2023,0:34:21,10/23/2023 – 10/29/2023,17:09:53,
"Socket Event Handling Update: Enhanced SocketContext.jsx to include event listeners for managing messages marked as 'read,' ensuring seamless real-time updates and synchronization with message read status.",10/29/2023,0:11:36,10/23/2023 – 10/29/2023,17:09:53,
"Chat UI and Functionality Refinements: In Chat.jsx, a comprehensive set of enhancements was implemented to enrich both functionality and user experience. These updates encompass the introduction of features such as fetching and marking unread messages as 'read' within the current chat, streamlined image message uploads facilitated by Cloudinary and multer on the backend, and the integration of Emoji Mart for emoji selection. Users can now effortlessly filter chats based on search terms in the search bar, ensuring quick access to specific conversations. Additionally, a modal mode was introduced for convenient image viewing, and transitions powered by react-spring, collectively delivering an elevated and polished user experience.",10/29/2023,2:17:27,10/23/2023 – 10/29/2023,17:09:53,
"Loading Integration: Integrated react-spinners into the application and established a dedicated loading context (loadingContext.jsx) to efficiently manage the loading state from child components. This integration ensures the display of a spinner when data is being fetched, enhancing user experience. Additionally, a reusable SpinnerComponent was introduced and seamlessly incorporated into various other components, offering consistent and visually engaging loading indicators throughout the application.",11/1/2023,0:36:57,10/30/2023 – 11/05/2023,-,
"Thorough Debugging for Message Read Logic:  Diligently addressed and resolved issues related to message read logic, ensuring optimal functionality both on the server and client sides.",11/2/2023,5:25:17,10/30/2023 – 11/05/2023,-,
"Initiated the Development of Presentation Slides: Commenced the creation and development of presentation slides for the project, marking an important step towards communicating the project's goals, progress, and achievements.",11/3/2023,2:12:23,10/30/2023 – 11/05/2023,-,
"Successfully Completed and Submitted Interim Supervisor Evaluation: Completed the 'Interim Supervisor Evaluation' form, and subsequently forwarded it to the supervisor for completion of the second page. The finalized evaluation will be submitted to the course instructors, contributing to the ongoing assessment of the project's progress and performance.",11/4/2023,0:39:37,10/30/2023 – 11/05/2023,-,
"Completed the Development of Presentation Slides: Successfully finalized the creation and development of presentation slides, marking a significant milestone in preparing to communicate the project's goals, accomplishments, and insights effectively.",11/5/2023,3:42:13,10/30/2023 – 11/05/2023,-,
